package com.exam.hims;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;

public class AddTables {
	
	
	public static void main(String[] args) {	
		String url = "jdbc:oracle:thin:@192.168.1.72:1521:orcl";
		String user = "hims2017";
		String password = "hims2017";
		Connection connection = null;
		PreparedStatement statement = null;
		String project = "cnepm2016";
		try {
			Class.forName("oracle.jdbc.driver.OracleDriver");
			connection = DriverManager.getConnection(url, user, password);
			
			addCandidate(connection, statement, project);
			
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			try {
				if (statement != null)
					statement.close();
				if (connection != null)
					connection.close();
			} catch (Exception e) {
				e.printStackTrace();
			}
			System.out.println("Success!");
		}		
	}
	
	private static void addCandidate(Connection connection, PreparedStatement statement, String project){
	    StringBuilder strB = new StringBuilder();
	    strB.append("-- Create table                                                  ");
	    strB.append("create table CANDIDATE                                           ");
	    strB.append("(                                                                ");
	    strB.append("  candidate_id       VARCHAR2(20) not null,                      ");
	    strB.append("  project_id         VARCHAR2(20),                               ");
	    strB.append("  archiveno          VARCHAR2(20),                               ");
	    strB.append("  name               VARCHAR2(80) not null,                      ");
	    strB.append("  cardtype_code      VARCHAR2(20),                               ");
	    strB.append("  cardtype_name      VARCHAR2(400),                              ");
	    strB.append("  cardno             VARCHAR2(30) not null,                      ");
	    strB.append("  gender             VARCHAR2(400),                              ");
	    strB.append("  birthdate          DATE,                                       ");
	    strB.append("  nation_code        VARCHAR2(20),                               ");
	    strB.append("  nation_name        VARCHAR2(400),                              ");
	    strB.append("  nationality        VARCHAR2(400),                              ");
	    strB.append("  nationality_remark VARCHAR2(100),                              ");
	    strB.append("  health_condition   VARCHAR2(400),                              ");
	    strB.append("  qualify_code       VARCHAR2(20),                               ");
	    strB.append("  qualify_name       VARCHAR2(400),                              ");
	    strB.append("  yearofqualify      NUMBER(2),                                  ");
	    strB.append("  certify_type_code  VARCHAR2(20),                               ");
	    strB.append("  certify_type_name  VARCHAR2(400),                              ");
	    strB.append("  address            VARCHAR2(100),                              ");
	    strB.append("  postcode           VARCHAR2(6),                                ");
	    strB.append("  mobile             VARCHAR2(60),                               ");
	    strB.append("  tel                VARCHAR2(60),                               ");
	    strB.append("  email              VARCHAR2(80),                               ");
	    strB.append("  orgname            VARCHAR2(80),                               ");
	    strB.append("  orgproperty_code   VARCHAR2(20),                               ");
	    strB.append("  orgproperty_name   VARCHAR2(400),                              ");
	    strB.append("  org_belong_code    VARCHAR2(20),                               ");
	    strB.append("  org_belong_name    VARCHAR2(400),                              ");
	    strB.append("  yearofwork         NUMBER(2),                                  ");
	    strB.append("  working_sign       VARCHAR2(1),                                ");
	    strB.append("  work_time          VARCHAR2(20),                               ");
	    strB.append("  practice           VARCHAR2(100),                              ");
	    strB.append("  school_code        VARCHAR2(50),                               ");
	    strB.append("  school_name        VARCHAR2(200),                              ");
	    strB.append("  school_remark      VARCHAR2(100),                              ");
	    strB.append("  byzy_code          VARCHAR2(20),                               ");
	    strB.append("  byzy_name          VARCHAR2(400),                              ");
	    strB.append("  byzy_remark        VARCHAR2(100),                              ");
	    strB.append("  certtime           VARCHAR2(20),                               ");
	    strB.append("  edulevel_code      VARCHAR2(20),                               ");
	    strB.append("  edulevel_name      VARCHAR2(400),                              ");
	    strB.append("  edu_cert_no        VARCHAR2(50),                               ");
	    strB.append("  degree_code        VARCHAR2(20),                               ");
	    strB.append("  degree_name        VARCHAR2(400),                              ");
	    strB.append("  edu_year_code      VARCHAR2(20),                               ");
	    strB.append("  edu_year_name      VARCHAR2(400),                              ");
	    strB.append("  edu_history        VARCHAR2(500),                              ");
	    strB.append("  xl_code            VARCHAR2(20),                               ");
	    strB.append("  xl_name            VARCHAR2(400),                              ");
	    strB.append("  graduating_student VARCHAR2(1),                                ");
	    strB.append("  history_sign       VARCHAR2(1),                                ");
	    strB.append("  pass_status        VARCHAR2(1),                                ");
	    strB.append("  region_code        VARCHAR2(1),                                ");
	    strB.append("  examinee_type      VARCHAR2(1),                                ");
	    strB.append("  examineeno         VARCHAR2(40),                               ");
	    strB.append("  sub_jb_id          VARCHAR2(20),                               ");
	    strB.append("  sub_jb_name        VARCHAR2(255),                              ");
	    strB.append("  sub_zy_id          VARCHAR2(20),                               ");
	    strB.append("  sub_zy_name        VARCHAR2(255),                              ");
	    strB.append("  kw_zy_code         VARCHAR2(20),                               ");
	    strB.append("  kw_zy_name         VARCHAR2(255),                              ");
	    strB.append("  org_bmd_id         VARCHAR2(20),                               ");
	    strB.append("  org_bmd_name       VARCHAR2(200),                              ");
	    strB.append("  org_shiji_id       VARCHAR2(20),                               ");
	    strB.append("  org_shiji_name     VARCHAR2(200),                              ");
	    strB.append("  org_shengji_id     VARCHAR2(20),                               ");
	    strB.append("  org_shengji_name   VARCHAR2(200),                              ");
	    strB.append("  compmode           VARCHAR2(20),                               ");
	    strB.append("  compmode_name      VARCHAR2(400),                              ");
	    strB.append("  is_valid           VARCHAR2(1)                                 ");
	    strB.append(")                                                                ");
	    strB.append("tablespace TS_HIMS                                               ");
	    strB.append("  pctfree 10                                                     ");
	    strB.append("  initrans 1                                                     ");
	    strB.append("  maxtrans 255                                                   ");
	    strB.append("  storage                                                        ");
	    strB.append("  (                                                              ");
	    strB.append("    initial 64K                                                  ");
	    strB.append("    next 1M                                                      ");
	    strB.append("    minextents 1                                                 ");
	    strB.append("    maxextents unlimited                                         ");
	    strB.append("  );                                                             ");
	    strB.append("-- Add comments to the table                                     ");
	    strB.append("comment on table CANDIDATE                                       ");
	    strB.append("  is '基本信息';                                                 ");
	    strB.append("-- Add comments to the columns                                   ");
	    strB.append("comment on column CANDIDATE.candidate_id                         ");
	    strB.append("  is '基本信息流水号';                                           ");
	    strB.append("comment on column CANDIDATE.project_id                           ");
	    strB.append("  is '项目流水号';                                               ");
	    strB.append("comment on column CANDIDATE.archiveno                            ");
	    strB.append("  is '档案号';                                                   ");
	    strB.append("comment on column CANDIDATE.name                                 ");
	    strB.append("  is '姓名';                                                     ");
	    strB.append("comment on column CANDIDATE.cardtype_code                        ");
	    strB.append("  is '证件类型编码(cardtype)';                                   ");
	    strB.append("comment on column CANDIDATE.cardtype_name                        ");
	    strB.append("  is '证件类型名称';                                             ");
	    strB.append("comment on column CANDIDATE.cardno                               ");
	    strB.append("  is '证件编号';                                                 ");
	    strB.append("comment on column CANDIDATE.gender                               ");
	    strB.append("  is '性别(文本)';                                               ");
	    strB.append("comment on column CANDIDATE.birthdate                            ");
	    strB.append("  is '出生日期';                                                 ");
	    strB.append("comment on column CANDIDATE.nation_code                          ");
	    strB.append("  is '民族编码(nation)';                                         ");
	    strB.append("comment on column CANDIDATE.nation_name                          ");
	    strB.append("  is '民族名称（冗余）';                                         ");
	    strB.append("comment on column CANDIDATE.nationality                          ");
	    strB.append("  is '国籍(文本)';                                               ");
	    strB.append("comment on column CANDIDATE.nationality_remark                   ");
	    strB.append("  is '国籍备注';                                                 ");
	    strB.append("comment on column CANDIDATE.health_condition                     ");
	    strB.append("  is '健康状况(文本)';                                           ");
	    strB.append("comment on column CANDIDATE.qualify_code                         ");
	    strB.append("  is '现有技术资格代码(qualify)';                                ");
	    strB.append("comment on column CANDIDATE.qualify_name                         ");
	    strB.append("  is '现有技术资格名称（冗余）';                                 ");
	    strB.append("comment on column CANDIDATE.yearofqualify                        ");
	    strB.append("  is '现有技术资格年限';                                         ");
	    strB.append("comment on column CANDIDATE.certify_type_code                    ");
	    strB.append("  is '执业类别编码';                                             ");
	    strB.append("comment on column CANDIDATE.certify_type_name                    ");
	    strB.append("  is '执业类别名称（冗余）';                                     ");
	    strB.append("comment on column CANDIDATE.address                              ");
	    strB.append("  is '地址';                                                     ");
	    strB.append("comment on column CANDIDATE.postcode                             ");
	    strB.append("  is '邮政编码';                                                 ");
	    strB.append("comment on column CANDIDATE.mobile                               ");
	    strB.append("  is '手机';                                                     ");
	    strB.append("comment on column CANDIDATE.tel                                  ");
	    strB.append("  is '固定电话';                                                 ");
	    strB.append("comment on column CANDIDATE.email                                ");
	    strB.append("  is 'email';                                                    ");
	    strB.append("comment on column CANDIDATE.orgname                              ");
	    strB.append("  is '单位名称';                                                 ");
	    strB.append("comment on column CANDIDATE.orgproperty_code                     ");
	    strB.append("  is '单位性质编码(orgproperty)';                                ");
	    strB.append("comment on column CANDIDATE.orgproperty_name                     ");
	    strB.append("  is '单位性质名称（冗余）';                                     ");
	    strB.append("comment on column CANDIDATE.org_belong_code                      ");
	    strB.append("  is '单位所属编码(orgblong)';                                   ");
	    strB.append("comment on column CANDIDATE.org_belong_name                      ");
	    strB.append("  is '单位所属名称（冗余）';                                     ");
	    strB.append("comment on column CANDIDATE.yearofwork                           ");
	    strB.append("  is '从事本专业年限';                                           ");
	    strB.append("comment on column CANDIDATE.working_sign                         ");
	    strB.append("  is '是否在岗(1,0)';                                            ");
	    strB.append("comment on column CANDIDATE.work_time                            ");
	    strB.append("  is '参加工作时间';                                             ");
	    strB.append("comment on column CANDIDATE.practice                             ");
	    strB.append("  is '实习单位(护考)';                                           ");
	    strB.append("comment on column CANDIDATE.school_code                          ");
	    strB.append("  is '在学/毕业学校编码';                                        ");
	    strB.append("comment on column CANDIDATE.school_name                          ");
	    strB.append("  is '在学/毕业学校名称（冗余）';                                ");
	    strB.append("comment on column CANDIDATE.school_remark                        ");
	    strB.append("  is '学校备注';                                                 ");
	    strB.append("comment on column CANDIDATE.byzy_code                            ");
	    strB.append("  is '毕业专业编码';                                             ");
	    strB.append("comment on column CANDIDATE.byzy_name                            ");
	    strB.append("  is '毕业专业名称（冗余）';                                     ");
	    strB.append("comment on column CANDIDATE.byzy_remark                          ");
	    strB.append("  is '毕业专业备注';                                             ");
	    strB.append("comment on column CANDIDATE.certtime                             ");
	    strB.append("  is '毕业时间';                                                 ");
	    strB.append("comment on column CANDIDATE.edulevel_code                        ");
	    strB.append("  is '最高学历编码(xl)';                                         ");
	    strB.append("comment on column CANDIDATE.edulevel_name                        ");
	    strB.append("  is '最高学历名称（冗余）';                                     ");
	    strB.append("comment on column CANDIDATE.edu_cert_no                          ");
	    strB.append("  is '学历证书编号';                                             ");
	    strB.append("comment on column CANDIDATE.degree_code                          ");
	    strB.append("  is '学位编码(degree)';                                         ");
	    strB.append("comment on column CANDIDATE.degree_name                          ");
	    strB.append("  is '学位名称（冗余）';                                         ");
	    strB.append("comment on column CANDIDATE.edu_year_code                        ");
	    strB.append("  is '学制编码(xz)';                                             ");
	    strB.append("comment on column CANDIDATE.edu_year_name                        ");
	    strB.append("  is '学制名称（冗余）';                                         ");
	    strB.append("comment on column CANDIDATE.edu_history                          ");
	    strB.append("  is '专业学习经历';                                             ");
	    strB.append("comment on column CANDIDATE.xl_code                              ");
	    strB.append("  is '在学/已有学历编码(xl)';                                    ");
	    strB.append("comment on column CANDIDATE.xl_name                              ");
	    strB.append("  is '在学/已有学历名称（冗余）';                                ");
	    strB.append("comment on column CANDIDATE.graduating_student                   ");
	    strB.append("  is '应往届标识:0往届,1应届';                                   ");
	    strB.append("comment on column CANDIDATE.history_sign                         ");
	    strB.append("  is '历史考生标识(0新生，1 历史考生)';                          ");
	    strB.append("comment on column CANDIDATE.pass_status                          ");
	    strB.append("  is '合格情况（0未通过，1通过，2滚动通过）';                    ");
	    strB.append("comment on column CANDIDATE.region_code                          ");
	    strB.append("  is '区域(1东部、2中部、3西部)';                                ");
	    strB.append("comment on column CANDIDATE.examinee_type                        ");
	    strB.append("  is '军队/非军队(0 非军队 1 军队)';                             ");
	    strB.append("comment on column CANDIDATE.examineeno                           ");
	    strB.append("  is '准考证号';                                                 ");
	    strB.append("comment on column CANDIDATE.sub_jb_id                            ");
	    strB.append("  is '报考级别';                                                 ");
	    strB.append("comment on column CANDIDATE.sub_jb_name                          ");
	    strB.append("  is 'SUB_JB_NAME';                                              ");
	    strB.append("comment on column CANDIDATE.sub_zy_id                            ");
	    strB.append("  is '报考专业';                                                 ");
	    strB.append("comment on column CANDIDATE.sub_zy_name                          ");
	    strB.append("  is 'SUB_ZY_NAME';                                              ");
	    strB.append("comment on column CANDIDATE.kw_zy_code                           ");
	    strB.append("  is '报考专业';                                                 ");
	    strB.append("comment on column CANDIDATE.kw_zy_name                           ");
	    strB.append("  is 'SUB_ZY_NAME';                                              ");
	    strB.append("comment on column CANDIDATE.org_bmd_id                           ");
	    strB.append("  is '所属报名点id';                                             ");
	    strB.append("comment on column CANDIDATE.org_bmd_name                         ");
	    strB.append("  is 'ORG_BMD_NAME';                                             ");
	    strB.append("comment on column CANDIDATE.org_shiji_id                         ");
	    strB.append("  is '所属市级机构号';                                           ");
	    strB.append("comment on column CANDIDATE.org_shiji_name                       ");
	    strB.append("  is 'ORG_SHIJI_NAME';                                           ");
	    strB.append("comment on column CANDIDATE.org_shengji_id                       ");
	    strB.append("  is '所属省级机构号';                                           ");
	    strB.append("comment on column CANDIDATE.org_shengji_name                     ");
	    strB.append("  is 'ORG_SHENGJI_NAME';                                         ");
	    strB.append("comment on column CANDIDATE.compmode                             ");
	    strB.append("  is '报名方式';                                                 ");
	    strB.append("comment on column CANDIDATE.compmode_name                        ");
	    strB.append("  is '报名方式名称（冗余）';                                     ");
	    strB.append("comment on column CANDIDATE.is_valid                             ");
	    strB.append("  is '是否有效考生（当年各科总分数>0）';                         ");
	    strB.append("-- Create/Recreate indexes                                       ");
	    strB.append("create index IDX_CANDIDATE_ARCHIVENO on CANDIDATE (ARCHIVENO)    ");
	    strB.append("  tablespace TS_HIMS_IDX                                         ");
	    strB.append("  pctfree 10                                                     ");
	    strB.append("  initrans 2                                                     ");
	    strB.append("  maxtrans 255                                                   ");
	    strB.append("  storage                                                        ");
	    strB.append("  (                                                              ");
	    strB.append("    initial 64K                                                  ");
	    strB.append("    next 1M                                                      ");
	    strB.append("    minextents 1                                                 ");
	    strB.append("    maxextents unlimited                                         ");
	    strB.append("  );                                                             ");
	    strB.append("create index IDX_CANDIDATE_CARDNO on CANDIDATE (CARDNO)          ");
	    strB.append("  tablespace TS_HIMS_IDX                                         ");
	    strB.append("  pctfree 10                                                     ");
	    strB.append("  initrans 2                                                     ");
	    strB.append("  maxtrans 255                                                   ");
	    strB.append("  storage                                                        ");
	    strB.append("  (                                                              ");
	    strB.append("    initial 64K                                                  ");
	    strB.append("    next 1M                                                      ");
	    strB.append("    minextents 1                                                 ");
	    strB.append("    maxextents unlimited                                         ");
	    strB.append("  );                                                             ");
	    strB.append("create index IDX_CANDIDATE_EXAMINEENO on CANDIDATE (EXAMINEENO)  ");
	    strB.append("  tablespace TS_HIMS_IDX                                         ");
	    strB.append("  pctfree 10                                                     ");
	    strB.append("  initrans 2                                                     ");
	    strB.append("  maxtrans 255                                                   ");
	    strB.append("  storage                                                        ");
	    strB.append("  (                                                              ");
	    strB.append("    initial 64K                                                  ");
	    strB.append("    next 1M                                                      ");
	    strB.append("    minextents 1                                                 ");
	    strB.append("    maxextents unlimited                                         ");
	    strB.append("  );                                                             ");
	    strB.append("create index IDX_CANDIDATE_NAME on CANDIDATE (NAME)              ");
	    strB.append("  tablespace TS_HIMS_IDX                                         ");
	    strB.append("  pctfree 10                                                     ");
	    strB.append("  initrans 2                                                     ");
	    strB.append("  maxtrans 255                                                   ");
	    strB.append("  storage                                                        ");
	    strB.append("  (                                                              ");
	    strB.append("    initial 64K                                                  ");
	    strB.append("    next 1M                                                      ");
	    strB.append("    minextents 1                                                 ");
	    strB.append("    maxextents unlimited                                         ");
	    strB.append("  );                                                             ");
	    strB.append("create index IDX_CANDIDATE_ORG_SHENGJI_ID on CANDIDATE (ORG_SHENGJI_ID)");
	    strB.append("  tablespace TS_HIMS_IDX                                         ");
	    strB.append("  pctfree 10                                                     ");
	    strB.append("  initrans 2                                                     ");
	    strB.append("  maxtrans 255                                                   ");
	    strB.append("  storage                                                        ");
	    strB.append("  (                                                              ");
	    strB.append("    initial 64K                                                  ");
	    strB.append("    next 1M                                                      ");
	    strB.append("    minextents 1                                                 ");
	    strB.append("    maxextents unlimited                                         ");
	    strB.append("  );                                                             ");
	    strB.append("create index IDX_CANDIDATE_PROJECTID on CANDIDATE (PROJECT_ID)   ");
	    strB.append("  tablespace TS_HIMS_IDX                                         ");
	    strB.append("  pctfree 10                                                     ");
	    strB.append("  initrans 2                                                     ");
	    strB.append("  maxtrans 255                                                   ");
	    strB.append("  storage                                                        ");
	    strB.append("  (                                                              ");
	    strB.append("    initial 64K                                                  ");
	    strB.append("    next 1M                                                      ");
	    strB.append("    minextents 1                                                 ");
	    strB.append("    maxextents unlimited                                         ");
	    strB.append("  );                                                             ");
	    strB.append("create index IDX_CANDIDATE_SUB_ZY_ID on CANDIDATE (SUB_ZY_ID)    ");
	    strB.append("  tablespace TS_HIMS_IDX                                         ");
	    strB.append("  pctfree 10                                                     ");
	    strB.append("  initrans 2                                                     ");
	    strB.append("  maxtrans 255                                                   ");
	    strB.append("  storage                                                        ");
	    strB.append("  (                                                              ");
	    strB.append("    initial 64K                                                  ");
	    strB.append("    next 1M                                                      ");
	    strB.append("    minextents 1                                                 ");
	    strB.append("    maxextents unlimited                                         ");
	    strB.append("  );                                                             ");
	    strB.append("create index IDX_CAN_PROJECT_CANDIDATE_ID on CANDIDATE (CANDIDATE_ID, PROJECT_ID)");
	    strB.append("  tablespace TS_HIMS                                             ");
	    strB.append("  pctfree 10                                                     ");
	    strB.append("  initrans 2                                                     ");
	    strB.append("  maxtrans 255                                                   ");
	    strB.append("  storage                                                        ");
	    strB.append("  (                                                              ");
	    strB.append("    initial 64K                                                  ");
	    strB.append("    next 1M                                                      ");
	    strB.append("    minextents 1                                                 ");
	    strB.append("    maxextents unlimited                                         ");
	    strB.append("  );                                                             ");
	    strB.append("-- Create/Recreate primary, unique and foreign key constraints   ");
	    strB.append("alter table CANDIDATE                                            ");
	    strB.append("  add constraint PK_CANDIDATE primary key (CANDIDATE_ID)         ");
	    strB.append("  using index                                                    ");
	    strB.append("  tablespace TS_HIMS_IDX                                         ");
	    strB.append("  pctfree 10                                                     ");
	    strB.append("  initrans 2                                                     ");
	    strB.append("  maxtrans 255                                                   ");
	    strB.append("  storage                                                        ");
	    strB.append("  (                                                              ");
	    strB.append("    initial 64K                                                  ");
	    strB.append("    next 1M                                                      ");
	    strB.append("    minextents 1                                                 ");
	    strB.append("    maxextents unlimited                                         ");
	    strB.append("  );                                                             ");
        try {
            statement = connection.prepareStatement(strB.toString());
            statement.executeQuery();
        } catch (SQLException e) {
            e.printStackTrace();
        }
	}
}
